version: '3'

services:

  ## Nginx instance controlling traffic to each service.
  nginx:
    restart: always
    build:
      context: nginx
      args:
        - HOSTNAME=${HOSTNAME}
    ports:
      - 80:80
      - 443:443
    container_name: docker_nginx
    volumes:
      - ./nginx/letsencrypt:/usr/share/nginx/html
      - ./certbot/etc:/usr/share/keys
    networks:
      - public

  ## Certbot for SSL automation.
  certbot:
    container_name: 'docker_certbot'
    image: certbot/certbot
    volumes:
      - ./keys:/var/lib/letsencrypt
      - ./nginx/letsencrypt:/data/letsencrypt
      - ./certbot/etc:/etc/letsencrypt
      - ./certbot/log:/var/log/letsencrypt
    networks:
      - public
    depends_on:
      - nginx

  ## Goal service for LEM / LP.
  goals:
    restart: always
    build: 
      context: goals
    container_name: goals
    networks:
      - public
    environment: 
      API_SECRET: "${API_SECRET}"

      KAFKA_BROKER: "${KAFKA_BROKER}"
      KAFKA_SASL_USER: "${KAFKA_SASL_USER}"
      KAFKA_SASL_PASS: "${KAFKA_SASL_PASS}"

      KAFKA_CONSUMER_GROUP: "goals"
      KAFKA_CONSUMER_TOPICS: "resolved-xapi,authority-xapi"
      
      KEYCLOAK_REALM: "${KEYCLOAK_REALM}"
      KEYCLOAK_CLIENT: "${KEYCLOAK_CLIENT}"
      KEYCLOAK_ENDPOINT: "${KEYCLOAK_URL}"
    volumes:
      - ./goals/data:/usr/src/app/data
      
  ## Kafka monitor.
  monitor:
    restart: always
    build: 
      context: kafka-monitor
    container_name: monitor
    environment:
      KAFKA_BROKER: "${KAFKA_BROKER}"
      KAFKA_SASL_USER: "${KAFKA_SASL_USER}"
      KAFKA_SASL_PASS: "${KAFKA_SASL_PASS}"

      KAFKA_CONSUMER_GROUP: "monitor"

      KAFKA_XAPI_NOISY: "${KAFKA_XAPI_NOISY}"
      KAFKA_XAPI_PENDING: "${KAFKA_XAPI_PENDING}"
      KAFKA_XAPI_TRANSACTIONAL: "${KAFKA_XAPI_TRANSACTIONAL}"
      KAFKA_XAPI_AUTHORITATIVE: "${KAFKA_XAPI_AUTHORITATIVE}"
      
      KEYCLOAK_REALM: "${KEYCLOAK_REALM}"
      KEYCLOAK_CLIENT: "${KEYCLOAK_CLIENT}"
      KEYCLOAK_ENDPOINT: "${KEYCLOAK_URL}"
    networks:
      - public
      
  ## Sorting service for routing xAPI.
  mail:
    restart: always
    build: 
      context: mail-sorter
    container_name: mail
    environment:
      API_SECRET: "${API_SECRET}"

      KAFKA_BROKER: "${KAFKA_BROKER}"
      KAFKA_SASL_USER: "${KAFKA_SASL_USER}"
      KAFKA_SASL_PASS: "${KAFKA_SASL_PASS}"

      KAFKA_CONSUMER_GROUP: "mail"
      KAFKA_CONSUMER_TOPICS: "${KAFKA_XAPI_NOISY}"

      KAFKA_XAPI_PENDING: "${KAFKA_XAPI_PENDING}"
      KAFKA_XAPI_TRANSACTIONAL: "${KAFKA_XAPI_TRANSACTIONAL}"
      KAFKA_XAPI_AUTHORITATIVE: "${KAFKA_XAPI_AUTHORITATIVE}"
      
      KEYCLOAK_REALM: "${KEYCLOAK_REALM}"
      KEYCLOAK_CLIENT: "${KEYCLOAK_CLIENT}"
      KEYCLOAK_ENDPOINT: "${KEYCLOAK_URL}"
      
      XI_ENDPOINT: "${XI_ENDPOINT}"
    networks:
      - public

  ## Goal service for LEM / LP.
  profile:
    restart: always
    build: 
      context: profile
    container_name: profile
    networks:
      - public
    volumes:
      - ./profile/data:/usr/src/app/data
    environment:
      HOSTNAME: "${HOSTNAME}"
      API_SECRET: "${API_SECRET}"

      ENDPOINT_GOALS: "http://goals:3000/goals"
      ENDPOINT_COMPETENCIES: "http://competencies:3000/competencies"
      ENDPOINT_SCHEDULER: "http://scheduler:3000/scheduler"

      KEYCLOAK_REALM: "${KEYCLOAK_REALM}"
      KEYCLOAK_CLIENT: "${KEYCLOAK_CLIENT}"
      KEYCLOAK_ENDPOINT: "${KEYCLOAK_URL}"
      
      LRS_ENDPOINT: "${LRS_ENDPOINT}"
      LRS_USER: "${LRS_USER}"
      LRS_PASS: "${LRS_PASS}"

  ## Competency service for LEM / LP.
  competencies:
    restart: always
    build: 
      context: competencies
    container_name: competencies
    networks:
      - public
    environment: 
      API_SECRET: "${API_SECRET}"

      KAFKA_BROKER: "${KAFKA_BROKER}"
      KAFKA_SASL_USER: "${KAFKA_SASL_USER}"
      KAFKA_SASL_PASS: "${KAFKA_SASL_PASS}"

      KAFKA_CONSUMER_GROUP: "competencies"
      KAFKA_CONSUMER_TOPICS: "authority-xapi"
      
      KEYCLOAK_REALM: "${KEYCLOAK_REALM}"
      KEYCLOAK_CLIENT: "${KEYCLOAK_CLIENT}"
      KEYCLOAK_ENDPOINT: "${KEYCLOAK_URL}"
    volumes:
      - ./competencies/data:/usr/src/app/data
      
  ## Resolution service for LRP xAPI.
  resolver:
    restart: always
    build: 
      context: resolver
    container_name: resolver
    networks:
      - public
    environment:
      API_SECRET: "${API_SECRET}"
      XI_ENDPOINT: "${XI_ENDPOINT}"
      XI_SECRET: "${XI_SECRET}"

      KAFKA_BROKER: "${KAFKA_BROKER}"
      KAFKA_SASL_USER: "${KAFKA_SASL_USER}"
      KAFKA_SASL_PASS: "${KAFKA_SASL_PASS}"

      KAFKA_CONSUMER_GROUP: "resolver"
      KAFKA_CONSUMER_TOPICS: "${KAFKA_XAPI_PENDING}"
      
      LRS_ENDPOINT: "${LRS_ENDPOINT}"
      LRS_USER: "${LRS_USER}"
      LRS_PASS: "${LRS_PASS}"

  ## Scheduler service for LEM / LP.
  scheduler:
    restart: always  
    build: 
      context: scheduler
    container_name: scheduler
    networks:
      - public
    environment:
      API_SECRET: "${API_SECRET}"

      KAFKA_BROKER: "${KAFKA_BROKER}"
      KAFKA_SASL_USER: "${KAFKA_SASL_USER}"
      KAFKA_SASL_PASS: "${KAFKA_SASL_PASS}"

      KAFKA_CONSUMER_GROUP: "scheduler"
      KAFKA_CONSUMER_TOPICS: "${KAFKA_XAPI_TRANSACTIONAL}"
      
      LRS_ENDPOINT: "${LRS_ENDPOINT}"
      LRS_USER: "${LRS_USER}"
      LRS_PASS: "${LRS_PASS}"
    volumes:
      - ./scheduler/data:/usr/src/app/data
  
  ## Placeholder Assertion Generation
  generator:
    restart: always
    build: 
      context: assertion-generator
    container_name: generator
    networks:
      - public
    environment: 
      API_SECRET: "${API_SECRET}"
      APPROVED_ASSERTION_DOMAINS: "${APPROVED_ASSERTION_DOMAINS}"
      
      XI_ENDPOINT: "${XI_ENDPOINT}"
      XI_SECRET: "${XI_SECRET}"

      KAFKA_BROKER: "${KAFKA_BROKER}"
      KAFKA_SASL_USER: "${KAFKA_SASL_USER}"
      KAFKA_SASL_PASS: "${KAFKA_SASL_PASS}"

      KAFKA_CONSUMER_GROUP: "assertion-generator"
      KAFKA_CONSUMER_TOPICS: "resolved-xapi"
      
      KEYCLOAK_REALM: "${KEYCLOAK_REALM}"
      KEYCLOAK_CLIENT: "${KEYCLOAK_CLIENT}"
      KEYCLOAK_ENDPOINT: "${KEYCLOAK_URL}"

      LRS_ENDPOINT: "${LRS_ENDPOINT}"
      LRS_USER: "${LRS_USER}"
      LRS_PASS: "${LRS_PASS}"

  mom:
    restart: always
    build: 
      context: mom-helper
    container_name: mom
    networks:
      - public
    environment:
      XI_ENDPOINT: "${XI_ENDPOINT}"
      
      KEYCLOAK_REALM: "${KEYCLOAK_REALM}"
      KEYCLOAK_CLIENT: "${KEYCLOAK_CLIENT}"
      KEYCLOAK_ENDPOINT: "${KEYCLOAK_URL}"

      LRS_ENDPOINT: "${LRS_ENDPOINT}"
      LRS_USER: "${LRS_USER}"
      LRS_PASS: "${LRS_PASS}"

  xapi-1:
    restart: always
    build:
      context: kafka-xapi
    container_name: xapi-processor-1
    environment:
      - BASIC_USERNAME
      - BASIC_PASSWORD

      - KAFKA_BROKER
      - KAFKA_SASL_USER
      - KAFKA_SASL_PASS
      - KAFKA_XAPI_TOPIC

      - KEYCLOAK_REALM
      - KEYCLOAK_CLIENT
      - KEYCLOAK_ENDPOINT
      - USE_KEYCLOAK
    networks:
      - public

networks:
  public: 
    driver: bridge
