version: '3'
services:

  # Database for LRS statements
  postgres:
    restart: always
    build: 
      context: postgres
    container_name: docker_postgres
    environment: 
      POSTGRES_DB: lrs
      POSTGRES_USER: lrs_owner
      POSTGRES_PASSWORD: lrs_password
    # Persist this data between sessions
    volumes:
      - ./postgres/data:/var/lib/postgresql/data

  # Required for activity metadata
  amqp:
    restart: always
    image: "rabbitmq:3-management"
    hostname: "rabbit1"
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    container_name: docker_rabbit
  
  # The actual ADL LRS service run through uWSGI
  lrs:
    restart: always
    build: 
      context: lrs
    container_name: docker_lrs
    links:
      - postgres
      - amqp
    ports:
      - 127.0.0.1:8000:8000
  
  nginx:
    restart: always
    build: 
      context: nginx
      args:
        PROXY_LRS_ROOT: "${PROXY_LRS_ROOT}"
        PROXY_HOST_NAME: "${PROXY_HOST_NAME}"
        PROXY_PORT: "${PROXY_PORT}"
    container_name: docker_nginx
    volumes:
      - ./nginx/letsencrypt:/usr/share/nginx/html
      - ./certbot/etc:/usr/share/keys
    ports:
      - 80:80
      - 443:443

  # Certbot for SSL automation
  #
  certbot:
    container_name: 'docker_certbot'
    image: certbot/certbot
    volumes:
      - ./keys:/var/lib/letsencrypt
      - ./nginx/letsencrypt:/data/letsencrypt
      - ./certbot/etc:/etc/letsencrypt
      - ./certbot/log:/var/log/letsencrypt
    depends_on:
      - nginx

  lrs-proxy-1:
    restart: always
    build:
      context: kafka-lrs-proxy
    container_name: proxy_1
    environment:
      PORT: "${PROXY_PORT}"
      PROXY_INFER: "${PROXY_INFER}"
      PROXY_LRS_ROOT: "${PROXY_LRS_ROOT}"
      KAFKA_BROKER: "${KAFKA_BROKER}"
      KAFKA_XAPI_TOPIC: "${KAFKA_XAPI_TOPIC}"
      KAFKA_SASL_USER: "${KAFKA_SASL_USER}"
      KAFKA_SASL_PASS: "${KAFKA_SASL_PASS}"

  lrs-proxy-2:
    restart: always
    build:
      context: kafka-lrs-proxy
    container_name: proxy_2
    environment:
      PORT: "${PROXY_PORT}"
      PROXY_INFER: "${PROXY_INFER}"
      PROXY_LRS_ROOT: "${PROXY_LRS_ROOT}"
      KAFKA_BROKER: "${KAFKA_BROKER}"
      KAFKA_XAPI_TOPIC: "${KAFKA_XAPI_TOPIC}"
      KAFKA_SASL_USER: "${KAFKA_SASL_USER}"
      KAFKA_SASL_PASS: "${KAFKA_SASL_PASS}"

  lrs-proxy-3:
    restart: always
    build:
      context: kafka-lrs-proxy
    container_name: proxy_3
    environment:
      PORT: "${PROXY_PORT}"
      PROXY_INFER: "${PROXY_INFER}"
      PROXY_LRS_ROOT: "${PROXY_LRS_ROOT}"
      KAFKA_BROKER: "${KAFKA_BROKER}"
      KAFKA_XAPI_TOPIC: "${KAFKA_XAPI_TOPIC}"
      KAFKA_SASL_USER: "${KAFKA_SASL_USER}"
      KAFKA_SASL_PASS: "${KAFKA_SASL_PASS}"
